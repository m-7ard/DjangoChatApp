# Generated by Django 4.0.4 on 2023-05-08 11:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('username_id', models.PositiveIntegerField(null=True)),
                ('username', models.CharField(max_length=30, null=True)),
                ('image', models.ImageField(default='blank.png', upload_to='')),
                ('bio', models.TextField(blank=True, max_length=50)),
                ('birthday', models.DateField(null=True)),
                ('last_ping', models.DateTimeField()),
                ('twitter', models.CharField(blank=True, max_length=500)),
                ('steam', models.CharField(blank=True, max_length=500)),
                ('twitch', models.CharField(blank=True, max_length=500)),
                ('spotify', models.CharField(blank=True, max_length=500)),
                ('premium', models.BooleanField(blank=True, default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username_id', models.PositiveIntegerField(null=True)),
                ('username', models.CharField(max_length=30, null=True)),
                ('image', models.ImageField(default='blank.png', upload_to='')),
                ('bio', models.TextField(blank=True, max_length=50)),
                ('birthday', models.DateField(null=True)),
                ('last_ping', models.DateTimeField()),
                ('twitter', models.CharField(blank=True, max_length=500)),
                ('steam', models.CharField(blank=True, max_length=500)),
                ('twitch', models.CharField(blank=True, max_length=500)),
                ('spotify', models.CharField(blank=True, max_length=500)),
                ('premium', models.BooleanField(blank=True, default=False)),
                ('status', models.CharField(choices=[('online', 'On-line'), ('offline', 'Off-line')], default='online', max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Friendship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted')], max_length=10)),
                ('receiver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incoming_friend_requests', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='outgoing_friend_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='profile',
            constraint=models.CheckConstraint(check=models.Q(('username_id__gte', 0), ('username_id__lte', 9999)), name='Valid username ID'),
        ),
        migrations.AddConstraint(
            model_name='profile',
            constraint=models.UniqueConstraint(fields=('username', 'username_id'), name='Verify unique username ID'),
        ),
    ]
